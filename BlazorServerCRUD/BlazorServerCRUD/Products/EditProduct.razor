@inject ProductService _productService;

<div class="overlay">
    <div class="edit-form">
        <h3>Edit Product</h3>
        <div class="form-group">
            <label for="productName">Product Name:</label>
            <input type="text" class="form-control" id="productName" @bind="@Product.Name" />
        </div>
        <div class="form-group">
            <label for="productPrice">Product Price:</label>
            <input type="number" class="form-control" id="productPrice" @bind="@Product.Price" />
        </div>
        <button class="btn btn-success" @onclick="SaveProductAsync">Save</button>
        <button class="btn btn-secondary" @onclick="CleseOverlayAsync">Cancel</button>
    </div>
</div>

@code {
    [Parameter]
    public required Product Product { get; set; }
    public bool IsOverlayVisible { get; set; }
    [Parameter]
    public EventCallback<bool> IsOverlayVisibleChanged { get; set; }

    private async Task SaveProductAsync()
    {
        var updated = await _productService.UpdateProductAsync(Product);

        if(updated is not null)
        {
            await IsOverlayVisibleChanged.InvokeAsync(false);
        }
        else
        {
            Console.WriteLine("Update failed");
        }
    }
    private async void CleseOverlayAsync()
    {
        await IsOverlayVisibleChanged.InvokeAsync(false);
    }
}
